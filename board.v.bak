module board #( parameter x_position, 
parameter y_position, 
parameter inside_goal ,
parameter team1_vu_button,
parameter team1_vd_button,
parameter team2_vu_button,
parameter team2_vd_button,
input clk, 
output reg [9:0] score_to_team1, 
output reg [9:0] score_to_team2
)
integer inside_goal = (GOAL_RADIUS - BALL_RADIUS) ** 2;
initial begin

end
// Score counter
	always @ (posedge clk) begin
	if ((((y_position-450)**2)+((x_position-300)**2) < inside_goal) // BLUE GOAL 1
				|| (((y_position-450)**2)+((x_position-400)**2) < inside_goal) // BLUE GOAL 2
				|| (((y_position-450)**2)+((x_position-500)**2) < inside_goal) // BLUE GOAL 3
		) begin
			state = beginning;
			score_to_team2 <= ((score_to_team2) +1);
	end
	else if ((((y_position-100)**2)+((x_position-300)**2) < inside_goal) // RED  GOAL 1
				|| (((y_position-100)**2)+((x_position-400)**2) < inside_goal) // RED  GOAL 2
				|| (((y_position-100)**2)+((x_position-500)**2) < inside_goal) // RED  GOAL 3
		) begin
			state = beginning;
			score_to_team1 <= ((score_to_team1)+1);
			end
	end
// Displaying scores of each team
//always @ (posedge clk) begin

//end
// Remaining Time
always @ (posedge clk) begin
	if ((minute >0) &&(second_msb==0)&& (second_lsb ==0)) begin
	minute <= minute -1;
	second_lsb <= 9;
	second_msb <= 5;
	end
	else if ((minute >0) &&(second_msb>0)&& (second_lsb ==0)) begin
	second_lsb <=9;
	second_msb <= second_msb -1;
	minute <= minute;
	end
	else if ((minute >0) &&(second_msb > 0)&& (second_lsb >0)) begin
	minute <= minute;
	second_msb <= second_msb;
	second_lsb <= second_lsb-1;
	end
	else if ((minute == 0) &&(second_msb==0)&& (second_lsb ==0)) begin
	minute <= 0;
	second_lsb <= 0;
	second_msb <= 0;
	team1_vu_button <= 1;
	team1_vd_button <= 1;
	team2_vu_button <=1;
	team2_vd_button <= 1;
	end
end
	endmodule